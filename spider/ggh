:

# ggh - Generates a 'gh' compatible .h file given all the files in a number
#       of directories or files.

# Usage: ggh filename.h dir|file...
#

usage() {
	echo "Usage: ggh filename.h dir|file..." 1>&2
	exit 1
}

OPTIND=1
force=
include=
define=
while getopts fI:D: c_
do
	case $c_ in
	f)		force=y		;;
	I)		include="$include -I$OPTARG"	;;
	D)		define="$define -D$OPTARG"	;;
	?)		usage		;;
	esac
done

[ "$include" ] && echo include=$include
[ "$define" ] && echo define=$define

shift `expr $OPTIND - 1`
[ $# -lt 2 ] && usage

filename=$1
[ -f $filename -a ! "$force" ] && {
	echo ggh: Delete $filename first or use '-f' flag
	exit 2
}

dir=`dirname $filename`
tfilename=$dir/ggh_$$
:> $tfilename

shift
while [ "$1" ]
do
	echo Collecting $1...
	if [ -f "$1" ]; then
		lc -1 $1 | awk '{printf "/* source: %s */\n",$0}' >> $tfilename
	elif [ -d "$1" ]; then
		lc -1 $1/*.c | awk '{printf "/* source: %s */\n",$0}' >> $tfilename
	else
		echo "ggh: *** $1 isn\'t a file or directory" 1>&2
	fi
	shift
done

gh $tfilename $include $define
mv -f $tfilename $filename
