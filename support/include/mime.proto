const char *mime_Base64Enc(int len, const char *szText, int nWrap, const char *szWrap);
const char *mime_Base64Dec(int *pnLen, const char *szText);
char *DeQuote(char *szText);
void mimenvp_SetParameter(MIMENVP *nvp, const char *param, const char *value);
MIMENVP *mime_SetHeader(MIME *m, const char *name, const char *value);
MIMENVP *mime_AddHeader(MIME *m, const char *name, const char *value);
const char *mime_GetHeader(MIME *m, const char *name);
const char *mime_GetFullHeaderValue(MIME *m, const char *name);
void mime_SetParameter(MIME *m, const char *name, const char *param, const char *value);
const char *mime_GetParameter(MIME *m, const char *name, const char *param);
void mimetext_Delete(MIMETEXT *t);
MIMETEXT *mimetext_New();
MIMETEXT *mimetext_NewText(int len, const char *szText);
MIMETEXT *mimetext_NewHeap(int len, const char *szText);
MIMETEXT *mimetext_NewFile(const char *szText);
void mime_SetContentType(MIME *m, const char *szType);
int mime_IsMultipart(MIME *m);
void mime_SetBoundary(MIME *m, const char *szBoundary);
void mime_Delete(MIME *m);
MIME *mime_New(const char *szType);
void mime_Dump(MIME *m);
MIME *mime_NewMultipart();
const char *mime_RenderHeapAdd(const char *heap, MIME *m);
const char *mime_RenderHeap(MIME *m);
void mime_ForceMultipart(MIME *m);
MIME *mime_AddBodyPart(MIME *m, const char *szType, int len, const char *szContent);
int mime_GetBodyCount(MIME *m);
MIME *mime_GetBodyPart(MIME *m, int nPart);
const char *mime_GetBodyText(MIME *m);
int mime_GetBodyLength(MIME *m);
void mime_ReturnData(const void *pData, int nLen);
const char *oldGetHeaderTokenRaw(char **pszBuf);
const char *oldGetHeaderToken(char **pszBuf);
MIME *mime_ReadX(const char *szOuterBoundary, char *pbFinal, char bWantBody);
MIME *mime_Read();
MIME *mime_ReadHeader();
MIME *mime_ReadFp(FILE *fp);
MIME *mime_ReadFile(const char *szFilename);
MIME *mime_ReadFn(mime_readfn fn);
MIME *mime_ReadHeaderFn(mime_readfn fn);
const char *mime_GetContentType(MIME *mime);
void mime_SetContentHeap(MIME *m, long len, const char *szContent);
char mime_ParseHeaderValues(char bSetting);
const char *mime_RenderBinary(MIME *m, int *pLen);
const char *mime_RenderContentBinary(MIME *m, int *pLen);
const char *mime_RenderHeaderHeap(MIME *m);
void mime_SetLastError(int nErr, const char *szFmt, ...);
int mime_GetLastError(void);
const char *mime_GetLastErrorStr(void);
const char *mime_GetHeaderList(MIME *mime);
