int rogxml_SetVerbose(int bState);
int rogxml_SetReadComments(int bState);
const char *rogxml_SetIndentString(const char *szIndent);
const char *rogxml_SetLinefeedString(const char *szLinefeed);
int rogxml_IsElement(rogxml *rx);
int rogxml_IsText(rogxml *rx);
int rogxml_IsInstruction(rogxml *rx);
int rogxml_IsRoot(rogxml *rx);
int rogxml_IsAttr(rogxml *rx);
int rogxml_IsNamespace(rogxml *rx);
int rogxml_IsComment(rogxml *rx);
const char *rogxml_GetValue(rogxml *rx);
const char *rogxml_GetValueByPath(rogxml *rx, const char *szPath);
const char *rogxml_GetLocalName(rogxml *rx);
const char *rogxml_GetNamespace(rogxml *rx);
const char *rogxml_GetURI(rogxml *rx);
const char *rogxml_GetFullName(rogxml *rx);
rogxml *rogxml_NewRoot();
rogxml *rogxml_NewElement(rogxml *rxParent, const char *szName);
rogxml *rogxml_NewComment(const char *szText);
void rogxml_Unlink(rogxml *rx);
void rogxml_Delete(rogxml *rx);
void rogxml_Remove(rogxml *rx);
void rogxml_DeleteTree(rogxml *rx);
rogxml *rogxml_FindLastSibling(rogxml *rx);
rogxml *rogxml_LinkFirstChild(rogxml *rx, rogxml *rxChild);
rogxml *rogxml_LinkChild(rogxml *rx, rogxml *rxChild);
rogxml *rogxml_LinkSibling(rogxml *rx, rogxml *rxSibling);
rogxml *rogxml_FindHeadElement(rogxml *rx);
rogxml *rogxml_FindTopNode(rogxml *rx);
rogxml *rogxml_FindRoot(rogxml *rx);
rogxml *rogxml_FindDocumentElement(rogxml *rx);
rogxml *rogxml_FindInstructionChild(rogxml *rx);
rogxml *rogxml_FindProlog(rogxml *rx);
void rogxml_SetVersion(rogxml *rx, const char *szText);
void rogxml_SetValue(rogxml *rx, const char *szValue);
void rogxml_SetCData(rogxml *rx);
void rogxml_ResetCData(rogxml *rx);
void rogxml_SetLiteral(rogxml *rx);
void rogxml_ResetLiteral(rogxml *rx);
rogxml *rogxml_NewError(int nErr, const char *szFmt, ...);
const char *rogxml_SplitName(rogxml *rx, const char *szName, rogxml **pns);
int rogxml_AddNamespace(rogxml *rx, const char *szName, const char *szURI);
rogxml *rogxml_FindAttr(rogxml *rx, const char *szName);
int rogxml_AddAttr(rogxml *rx, const char *szName, const char *szValue);
rogxml *rogxml_SetAttr(rogxml *rx, const char *szName, const char *szValue);
rogxml *rogxml_SetAttrInt(rogxml *rx, const char *szName, int nValue);
rogxml *rogxml_AddText(rogxml *rx, const char *szText);
rogxml *rogxml_SetText(rogxml *rx, const char *szText);
rogxml *rogxml_AddFirstChild(rogxml *rx, const char *szName);
rogxml *rogxml_AddChild(rogxml *rx, const char *szName);
rogxml *rogxml_AddSibling(rogxml *rx, const char *szName);
rogxml *rogxml_AddTextChild(rogxml *rx, const char *szName, const char *szText);
rogxml *rogxml_AddChildComment(rogxml *rx, const char *szComment);
rogxml *rogxml_AddSiblingComment(rogxml *rx, const char *szComment);
rogxml *rogxml_AddChildAttr(rogxml *rx, const char *szElement, const char *szAttr, const char *szValue);
rogxml *rogxml_AddTextChildCond(rogxml *rx, const char *szName, const char *szText);
void rogxml_DumpElement(rogxml *rx);
void rogxml_DumpRaw(rogxml *rx);
void rogxml_CloseInputFile();
char *rogxml_CloseOutputFile();
const char *rogxml_ToText(rogxml *rx);
const char *rogxml_GetNextText();
rogxml *rogxml_FromText(const char *szText);
void rogxml_Dump(rogxml *rx);
int rogxml_WriteFp(rogxml *rx, FILE *fp);
const char *rogxml_WriteFile(rogxml *rx, const char *szFilename);
const char *rogxml_WriteHTMLFile(rogxml *rx, const char *szFilename);
int rogxml_ErrorNo(rogxml *rx);
const char *rogxml_ErrorText(rogxml *rx);
rogxml *rogxml_ReadElement(rogxml *rxParent);
int rogxml_OpenInputFile(const char *szFilename);
rogxml *rogxml_ReadFp(FILE *fp);
rogxml *rogxml_ReadFile(const char *szFilename);
rogxml *rogxml_ReadFn(readfn_t *fn);
rogxml *rogxml_FindLastChild(rogxml *rx);
rogxml *rogxml_FindParent(rogxml *rx);
rogxml *rogxml_FindFirstChild(rogxml *rx);
rogxml *rogxml_FindNextSibling(rogxml *rx);
rogxml *rogxml_FindPrevSibling(rogxml *rx);
rogxml *rogxml_FindPrevItem(rogxml *rx);
rogxml *rogxml_FindNextIfDeleted(rogxml *rx);
rogxml *rogxml_FindNextItem(rogxml *rx);
rogxml *rogxml_FindNextElement(rogxml *rx);
rogxml *rogxml_FindChild(rogxml *rx, const char *szName);
rogxml *rogxml_FindSelfOrSibling(rogxml *rx, const char *szName);
rogxml *rogxml_FindSibling(rogxml *rx, const char *szName);
rogxml *rogxml_FindElement(rogxml *rx, const char *szName);
int rogxml_GetElementDepth(rogxml *rx);
const char *rogxml_GetElementText(rogxml *rx);
rogxml *rogxml_FindFirstAttribute(rogxml *rx);
const char* rogxml_GetAttributeValue(rogxml *rx, const char *szName);
rogxml *rogxml_FindFirstSibling(rogxml *rx);
rogxml *rogxml_ReplaceElement(rogxml *rx, rogxml *rxNew);
int rogxml_GetSiblingNumber(rogxml *rx);
int rogxml_GetNamedSiblingNumber(rogxml *rx);
int rogxml_GetSiblingCount(rogxml *rx);
int rogxml_GetNamedSiblingCount(rogxml *rx);
const char *rogxml_GetXPathH(rogxml *rx);
void rogxpath_Delete(rogxpath *rxp);
int rogxpath_GetCount(rogxpath *rxp);
rogxml *rogxpath_GetElement(rogxpath *rxp, int nElement);
rogxpath *rogxpath_New(rogxml *rx, const char *szPath);
int rogxpath_FindElement(rogxpath *rxp, rogxml *rx);
int rogxpath_AddElement(rogxpath *rxp, rogxml *rx);
int rogxpath_DelElement(rogxpath *rxp, rogxml *rx);
rogxml *rogxml_FindByPath(rogxml *rx, const char *szAddress);
void rogxpath_Dump(rogxpath *rxp);
void rogxml_SetDump(FILE *fp);
rogxml *rogxml_AddChildCommentf(rogxml *rx, const char *szFmt, ...);
rogxml *rogxml_AddSiblingCommentf(rogxml *rx, const char *szFmt, ...);
rogxml *rogxml_SetAttrf(rogxml *rx, const char *szName, const char *szFmt, ...);
rogxml *rogxml_AddTextf(rogxml *rx, const char *szFmt, ...);
rogxml *rogxml_SetTextf(rogxml *rx, const char *szFmt, ...);
rogxml *rogxml_AddTextChildf(rogxml *rx, const char *szName, const char *szFmt, ...);
int rogxml_WalkPrefix(rogxml *rx, const char *szPrefix, rogxmlWalkFn *fn);
rogxml *rogxml_AddCDataChild(rogxml *rx, const char *szName, const char *szText);
rogxml *rogxml_AddCDataChildf(rogxml *rx, const char *szName, const char *szFmt, ...);
const char *rogxml_GetAttr(rogxml *rx, const char *szName);
int rogxml_GetAttrInt(rogxml *rx, const char *szName, int nDef);
void rogxml_LocaliseNamespaces(rogxml *rx);
int rogxml_RetainControls(int bState);
