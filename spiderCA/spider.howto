How to use the spider scripts to administer spider certificates.

Requisites:

  The openssl command (this is installed as standard)
  spider.createCA
  spider.createClientRequest
  spider.signClientRequest

------------------------------------------------

Create yourself an empty directory to act as the Certificate Authority workspace and run:

  # spider.createCA

That will have created the environment for signing certificates and created a certificate authority certificate and keys.  The 'etc' directory will contain the three files that spider requires - copy them to /usr/mt/spider/etc.  Once these are installed in Spider, only clients holding certificates signed in here will be able to use the APIs.

------------------------------------------------

Each client that wants to connect will need a specific certificate to indentify it as being legitimate.  To generate such a certificate, a request needs to be generated.  This would normally be done by the client so we should have a web page or give them a copy of the following script, which is used as follows:

  # spider.createClientRequest <Organisation> <Product>

Where <Organisation> and <Product> should be strings identifying the application that wants to connect.  This will create files
called:

  Organisation.Product.req.pem
  Organisation.key.pem

Where the Organisation and Product will be those specified above.  The Organisation.key.pem is only created if it doesn't exist so that a single organisation doesn't need multiple keys.  The Organisation.Product.req.pem file should be provided to us to be used in the next stage.

------------------------------------------------

To generate the actual certificate that the client uses, the request needs to be signed using the certificate authority created at the beginning.  To sign a request, sit in the CA directory that was used at the top and type:

  spider.signClientRequest <Path>/Organisation.Product.req.pem [days]

Where Path is the path to the request file as it's not envisaged that it will be copied to the CA directory for this.  'days' is the number of days for which the certificate is valid and defaults to 366.

This will create, in the same directory as the request file:

  Organisation.Product.cert.pem
  spiderca.cert.pem

These two will be needed by the client for their software.  How they're installed is, however, their problem.

Rog - 25 May 2014
